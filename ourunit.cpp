#define CATCH_CONFIG_MAIN  // This tells Catch to provide a main() - only do this in one cpp file
#include "catch.hpp"
#include "my_vector.h"
#include "my_vector.cpp"
#include "utils.h"
#include "curve.h"
#include "curve.cpp"
#include "curve_point.h"
#include "curve_point.cpp"
#include "cluster_object.h"
#include "cluster_object.cpp"



TEST_CASE( "line constructor is ok", "[myclass]" ) {

	//dokimh domhs mas??
    my_vector<double> tut("item2	63.20217070528021	49.39643950413024	53.5711691919124	57.709287834717	54.21026097719252	71.57302238712153	10.87701963306849	56.05665863666659	51.83311678589824	19.97878712211849	87.96576232058213	6.98806463320445	57.39173749594573	85.99327572653624	47.13631102144279	45.28537419058907	36.2145704249009	36.48981280479552	33.59969931576136	5.227088586549091	75.62376292835586	81.53369034646684	53.81966339208573	74.18056071272186	97.73834293212772	9.544349537604983	86.32853915496725	10.37950880934387	78.72317331057333	56.69201751898492	71.26877893651098	37.82711248445837	29.50023452252528	-0.5030878756138644	95.95705507779206	61.29448910411606	37.22208607825048	85.7626205456759	7.583639644671013	82.02120039428397	15.70364509314864	41.91207009948283	79.94209200851229	36.29199602985404	12.03723013996313	71.78312331011621	31.43843950461975	8.042154496170056	42.29494540934827	10.96761170155584	7.236487412667665	62.80405185218544	72.73640293922909	35.86202914185765	38.38316801652506	44.25849563760661	62.02953913105147	48.69213979029203	41.87306326880341	21.31745843170831	3.879438927906398	38.21394084218036	36.33120163507338	13.73112148971904	64.10030156636869	48.10021581220737	84.47193197295431	3.130219924668297	16.85870503823595	86.35248849754204	53.40572163498275	46.84667682538839	66.20970928525682	79.43217321294736	2.942061514987618	85.45151986431937	92.61572154360282	87.41970031268168	52.72646232932078	43.55483634127449	32.1866270393619	22.44440138571233	55.96765399092698	42.18712540340447	37.27162144066317	17.47421429445945	100.2117658645539	36.57710098955097	77.91430866295848	6.019377365126586	96.7081547782482	93.00482455052298	47.09054447376787	61.68068582517557	35.65535419624484	88.66352545480287	75.90704146164909	33.52719158535249	54.5474065429925	82.78865426446133");
	REQUIRE( tut.get_id() == "item2" ); //koitaei o constructor apo line enos vector einai ok?
	REQUIRE( tut.get_v().size() == 100 ); //koitaei o constructor apo line enos vector einai ok?
	REQUIRE( manhattan_distance(tut.get_v(), tut.get_v()) == 0 ); //koitaei o constructor apo line enos vector einai ok?
}


TEST_CASE( "curves is ok", "[myclass]" ) {

	//dokimh domhs mas??
    curve<double> tut("7187	4	(-6.2256499999999999, 53.391399999999997) (-6.2256499999999999, 53.391399999999997) (-6.2227699999999997, 53.392099999999999) (-6.2785299999999999, 53.4178)");
	REQUIRE( tut.get_id() == "7187" ); //koitaei o constructor apo line enos vector einai ok?
	REQUIRE( tut.get_points().size() == 4 ); //koitaei an pragmati ta shmeia eiani entaksei
	REQUIRE( dtw(&tut, &tut) == 0 ); //koitaei o constructor apo line enos vector einai ok?
}




TEST_CASE( "empty cluster is ok", "[myclass]" ) {

	//dokimh domhs mas??
    my_vector<double> tut("item2	63.20217070528021	49.39643950413024	53.5711691919124	57.709287834717	54.21026097719252	71.57302238712153	10.87701963306849	56.05665863666659	51.83311678589824	19.97878712211849	87.96576232058213	6.98806463320445	57.39173749594573	85.99327572653624	47.13631102144279	45.28537419058907	36.2145704249009	36.48981280479552	33.59969931576136	5.227088586549091	75.62376292835586	81.53369034646684	53.81966339208573	74.18056071272186	97.73834293212772	9.544349537604983	86.32853915496725	10.37950880934387	78.72317331057333	56.69201751898492	71.26877893651098	37.82711248445837	29.50023452252528	-0.5030878756138644	95.95705507779206	61.29448910411606	37.22208607825048	85.7626205456759	7.583639644671013	82.02120039428397	15.70364509314864	41.91207009948283	79.94209200851229	36.29199602985404	12.03723013996313	71.78312331011621	31.43843950461975	8.042154496170056	42.29494540934827	10.96761170155584	7.236487412667665	62.80405185218544	72.73640293922909	35.86202914185765	38.38316801652506	44.25849563760661	62.02953913105147	48.69213979029203	41.87306326880341	21.31745843170831	3.879438927906398	38.21394084218036	36.33120163507338	13.73112148971904	64.10030156636869	48.10021581220737	84.47193197295431	3.130219924668297	16.85870503823595	86.35248849754204	53.40572163498275	46.84667682538839	66.20970928525682	79.43217321294736	2.942061514987618	85.45151986431937	92.61572154360282	87.41970031268168	52.72646232932078	43.55483634127449	32.1866270393619	22.44440138571233	55.96765399092698	42.18712540340447	37.27162144066317	17.47421429445945	100.2117658645539	36.57710098955097	77.91430866295848	6.019377365126586	96.7081547782482	93.00482455052298	47.09054447376787	61.68068582517557	35.65535419624484	88.66352545480287	75.90704146164909	33.52719158535249	54.5474065429925	82.78865426446133");

	cluster<double> klus;
	klus.set_center(&tut);
	REQUIRE( klus.get_center_id() == tut.get_id() ); //koitaei oti ontws egine kentro tou cluster
	REQUIRE( klus.get_set_of_points()->size() <1 ); //koitaei pws pragmati einai keno
	
}



TEST_CASE( "cluster is ok", "[myclass]" ) {

	//dokimh domhs mas??
    my_vector<double> tut("item2	63.20217070528021	49.39643950413024	53.5711691919124	57.709287834717	54.21026097719252	71.57302238712153	10.87701963306849	56.05665863666659	51.83311678589824	19.97878712211849	87.96576232058213	6.98806463320445	57.39173749594573	85.99327572653624	47.13631102144279	45.28537419058907	36.2145704249009	36.48981280479552	33.59969931576136	5.227088586549091	75.62376292835586	81.53369034646684	53.81966339208573	74.18056071272186	97.73834293212772	9.544349537604983	86.32853915496725	10.37950880934387	78.72317331057333	56.69201751898492	71.26877893651098	37.82711248445837	29.50023452252528	-0.5030878756138644	95.95705507779206	61.29448910411606	37.22208607825048	85.7626205456759	7.583639644671013	82.02120039428397	15.70364509314864	41.91207009948283	79.94209200851229	36.29199602985404	12.03723013996313	71.78312331011621	31.43843950461975	8.042154496170056	42.29494540934827	10.96761170155584	7.236487412667665	62.80405185218544	72.73640293922909	35.86202914185765	38.38316801652506	44.25849563760661	62.02953913105147	48.69213979029203	41.87306326880341	21.31745843170831	3.879438927906398	38.21394084218036	36.33120163507338	13.73112148971904	64.10030156636869	48.10021581220737	84.47193197295431	3.130219924668297	16.85870503823595	86.35248849754204	53.40572163498275	46.84667682538839	66.20970928525682	79.43217321294736	2.942061514987618	85.45151986431937	92.61572154360282	87.41970031268168	52.72646232932078	43.55483634127449	32.1866270393619	22.44440138571233	55.96765399092698	42.18712540340447	37.27162144066317	17.47421429445945	100.2117658645539	36.57710098955097	77.91430866295848	6.019377365126586	96.7081547782482	93.00482455052298	47.09054447376787	61.68068582517557	35.65535419624484	88.66352545480287	75.90704146164909	33.52719158535249	54.5474065429925	82.78865426446133");

my_vector<double> tut2("item5	23.20217070528021	49.39643950413024	53.5711691919124	57.709287834717	54.21026097719252	71.57302238712153	13.87701963306849	56.05665863666659	51.83311678589824	19.97878712211849	87.96576232058213	6.98806463320445	57.39173749594573	85.99327572653624	47.13631102144279	45.28537419058907	36.2145704249009	36.48981280479552	33.59969931576136	5.227088586549091	75.62376292835586	81.53369034646684	53.81966339208573	74.18056071272186	97.73834293212772	42.544349537604983	86.32853915496725	10.37950880934387	78.72317331057333	56.69201751898492	71.26877893651098	37.82711248445837	29.50023452252528	-0.5030878756138644	95.95705507779206	61.29448910411606	37.22208607825048	85.7626205456759	7.583639644671013	82.02120039428397	15.70364509314864	41.91207009948283	79.94209200851229	36.29199602985404	11.03723013996313	71.78312331011621	31.43843950461975	8.042154496170056	42.29494540934827	10.96761170155584	7.236487412667665	62.80405185218544	72.73640293922909	35.86202914185765	38.38316801652506	44.25849563760661	62.02953913105147	48.69213979029203	41.87306326880341	21.31745843170831	3.879438927906398	38.21394084218036	36.33120163507338	13.73112148971904	64.10030156636869	48.10021581220737	84.47193197295431	13.130219924668297	16.85870503823595	86.35248849754204	53.40572163498275	46.84667682538839	66.20970928525682	79.43217321294736	2.942061514987618	85.45151986431937	92.61572154360282	87.41970031268168	22.72646232932078	43.55483634127449	32.1866270393619	22.44440138571233	55.96765399092698	42.18712540340447	37.27162144066317	17.47421429445945	100.2117658645539	36.57710098955097	77.91430866295848	6.019377365126586	96.7081547782482	93.00482455052298	47.09054447376787	81.68068582517557	35.65535419624484	88.66352545480287	75.90704146164909	33.52719158535249	64.5474065429925	82.78865426446133");

	cluster<double> klus;
	klus.set_center(&tut);
	klus.incorporate_point(&tut2);
	REQUIRE( klus.get_center_id() != tut2.get_id() ); //koitaei oti ontws egine kentro tou cluster
	REQUIRE( klus.get_set_of_points()->size() >0 ); //koitaei pws den einai keno
	
}

